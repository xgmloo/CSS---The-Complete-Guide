/* prefixed by https://autoprefixer.github.io (PostCSS: v7.0.26, autoprefixer: v9.7.3) */

@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Lato&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Montserrat&display=swap');

:root {
    --dark-green: #0e4f1f;
    --highlight-color: #ff1b68;
}

* {
    /* CSS 中的 box-sizing 属性定义了 user agent 应该如何计算一个元素的总宽度和总高度。

     box-sizing 属性可以被用来调整这些表现:
     content-box  是默认值。如果你设置一个元素的宽为100px，那么这个元素的内容区会有100px 宽，
                  并且任何边框和内边距的宽度都会被增加到最后绘制出来的元素宽度中。
     border-box 告诉浏览器：你想要设置的边框和内边距的值是包含在width内的。也就是说，如果你将
                  一个元素的width设为100px，那么这100px会包含它的border和padding，内容区的
                  实际宽度是width减去(border + padding)的值。大多数情况下，这使得我们更容易
                  地设定一个元素的宽高。 */
    -webkit-box-sizing: border-box;
            box-sizing: border-box;
}

html {
    height: 100%;
}

body {
    font-family: 'Montserrat', sans-serif;
    margin: 0;
    display: -ms-grid;
    display: grid;
    -ms-grid-rows: 3.5rem auto fit-content(8rem);
    grid-template-rows: 3.5rem auto fit-content(8rem);
        grid-template-areas: 'header'
                         'main'
                         'footer';
    height: 100%;
}

main {
    -ms-grid-row: 2;
    -ms-grid-column: 1;
    /* min-height: calc(100vh - 3.5rem - 8rem); */
    /* grid-row: 2 / 3; */
    grid-area: main;
}

.backdrop {
    position: fixed;
    /* positon: absolute; 若之前没有 position: relative; , 则表现和 fixed 一样 */
    display: none;
    top: 0;
    left: 0;
    z-index: 100;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.5);
}

.main-header {
    width: 100%;
    background: #2ddf5c;
    padding: 0.5rem 1rem;
    position: fixed;
    z-index: 60;
    top: 0;
    left: 0;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
}

/* CSS 的属性 vertical-align 用来指定行内元素（inline）或表格单元格（table-cell）元素的垂直对齐方式。 */
/* .main-header>div {
    display: inline-block;
    vertical-align: middle;
} */

.toggle-button {
    width: 3rem;
    background: transparent;
    border: none;
    cursor: pointer;
    padding-top: 0;
    padding-bottom: 0;
    vertical-align: middle;
}

.toggle-button:focus {
    outline: none;
}

.toggle-button__bar {
    width: 100%;
    height: 0.2rem;
    background: black;
    display: block;
    margin: 0.6rem 0;
}

.main-header__brand {
    color: var(--dark-green);
    text-decoration: none;
    font-weight: bold;
}

.main-header__brand img {
    height: 2.5rem;
    vertical-align: middle;
}

.main-nav {
    display: none;
}

.main-nav__items {
    margin: 0;
    padding: 0;
    list-style: none;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
}

.main-nav__item {
    margin: 0 1rem;
}

.main-nav__item a,
.mobile-nav__item a {
    text-decoration: none;
    color: var(--dark-green);
    font-weight: bold;
    padding: 0.2rem 0;
}

.main-nav__item a:hover,
.main-nav__item a:active {
    color: white;
    border-bottom: 5px solid white;
}

.main-nav__item--cta a,
.mobile-nav__item--cta a {
    color: white;
    background: var(--highlight-color);
    padding: 0.5rem 1rem;
    border-radius: 8px;
}

.main-nav__item--cta a:hover,
.main-nav__item--cta a:active,
.mobile-nav__item--cta a:hover,
.mobile-nav__item--cta a:active {
    color: var(--highlight-color);
    background: white;
    border: none;
}

@media (min-width: 40rem) {
    .toggle-button {
        display: none;
    }

    .main-nav {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
    }
}

.main-footer {
    -ms-grid-row: 3;
    -ms-grid-column: 1;
    background: black;
    padding: 2rem;
    margin-top: 3rem;
    grid-area: footer;
}

.main-footer__links {
    list-style: none;
    margin: 0;
    padding: 0;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
}

.main-footer__link {
    margin: 0.5rem 0;
}

.main-footer__link a {
    color: white;
    /* text-decoration 这个 CSS 属性是用于设置文本的修饰线外观的（下划线、上划线、贯穿线/删除线  或 闪烁）。
       它是 text-decoration-line, text-decoration-color, text-decoration-style, 
       和新出现的 text-decoration-thickness 属性的缩写。 */
    text-decoration: none;
}

.main-footer__link a:hover,
.main-footer__link a:active {
    color: #ccc;
}

/* %:
   position: fixed , the containing block is the Viewport
   position: absolute , the containing block is the Ancestor(content + padding) (the closest ancestor which is not position static)
   position: atatic/relative , the containing block is the Ancestor(only content) (the closest ancestor whick is the block level element) */

.mobile-nav {
    display: none;
    position: fixed;
    z-index: 101;
    top: 0;
    left: 0;
    background: white;
    width: 80%;
    height: 100vh;
}

.mobile-nav__items {
    /* width: 90%; */
    height: 100%;
    list-style: none;
    /* margin: auto; */
    padding: 0;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; /* cross axis */
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center; /* main axis */
}

.mobile-nav__item {
    margin: 1rem 0;
}

.mobile-nav__item a {
    font-size: 1.5rem;
}

.button {
    background: var(--dark-green);
    color: white;
    font: inherit;
    border: 1.5px solid var(--dark-green);
    padding: 0.5rem;
    border-radius: 8px;
    font-weight: bold;
    cursor: pointer;
}

.button:hover,
.button:active {
    background: white;
    color: var(--dark-green);
}

/* CSS伪类 :focus表示获得焦点的元素（如表单输入）。当用户点击或触摸元素或通过键盘的 “tab” 键选择它时会被触发。button被触发后会有蓝框（outline）。 */
.button:focus {
    /* CSS的outline属性是用来设置一个或多个单独的轮廓属性的简写属性，例如 outline-style, outline-width 和 outline-color。
       轮廓与边框在以下几个方面存在不同：
        - 轮廓不占据空间，它们被描绘于内容之上
        - 轮廓可以是非矩形的。在Gecko/Firefox中，轮廓是矩形的，但是Opera则会围绕元素结构绘制非矩形的形状  */
    outline: none;
}

/* .button[disabled] {
    cursor: not-allowed;
    border: #a1a1a1;
    background: #ccc;
    color: #a1a1a1;
} */

.open {
    display: block !important;
}

@media (min-width: 40rem) {
    .main-footer__links {
        -webkit-box-orient: horizontal;
        -webkit-box-direction: normal;
            -ms-flex-direction: row;
                flex-direction: row;
        -webkit-box-pack: center;
            -ms-flex-pack: center;
                justify-content: center;
    }

    .main-footer__link {
        margin: 0 1rem;
    }
}